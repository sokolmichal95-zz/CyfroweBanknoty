package Banknote;

import Utils.Utils;
import static Utils.Utils.Mode.*;

public class NoteCreate {

	// --Strings used to make bit commitment--//
	static String[] rightMystery = new String[100];
	static String[] leftMystery = new String[100];
	// ---------------------------------------//

	public static void mysterySeparate() throws Exception {
		String[] mystery = new String[100];
		for (int i = 0; i < 100; i++) {
			String I = Utils.generateRandomString(256, BYTE);
			//System.out.println("I" + i + ": " + I);
			mystery[i] = I;
		}
		for (int i = 0; i < 100; i++) {
			rightMystery[i] = Utils.generateRandomString(256, BYTE);
			//System.out.println("R" + i + ": " + rightMystery[i]);
		}
		for (int i = 0; i < 100; i++) {
			leftMystery[i] = Utils.getExclusiveOR(mystery[i], rightMystery[i]);
			//System.out.println("L" + i + ": " + leftMystery[i]);
		}
	}

	public static String[][] BitComm(String[] input, String safe) throws Exception {
		String[] temp = new String[100];
		String[] tempOut = new String[100];
		for (int i = 0; i < 100; i++) {
			String out = Utils.generateRandomString(256, ALPHANUMERIC);
			String hash = out + safe + input[i];
			temp[i] = Utils.getHash(hash);
			tempOut[i] = out;
		}
		String[][] ret = new String[2][];
		ret[0] = temp;
		ret[1] = tempOut;
		return ret;
	}
}
